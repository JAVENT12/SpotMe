@*@model IEnumerable<Identity.Models.MuscleGroup>*@
@model Identity.Models.ViewModel.MuscleGroupListViewModel

@{
    ViewData["Title"] = "MuscleGroup";

}

<head>
    
</head>
<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myTable2");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc";
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
<table width="70%"class="table table-striped table-bordered table-sm">

    <thead>
        <tr>



            <th width="70%" class="text-center" style="color:white">Muscle Groups</th>


        </tr>
    </thead>
    <tbody>


        <tr>
            <td class="text-center">
                @await Component.InvokeAsync("NavigationMenu")


                @*@Html.DisplayFor(modelItem => item.title)

                    @*<a asp-controller="MuscleGroups" asp-action="Excercises" style="color:black" asp-route-id="@item.WorkoutsID"> @Html.DisplayFor(modelItem => item.muscleCategory)</a>*@

                @*<a asp-action="Description" style="color:black" asp-route-id="@item.muscleGroupID"> @Html.DisplayFor(modelItem => item.name)</a>*@
            </td>



        </tr>

        
        @*<tr>
            <td class="text-center">
                <a asp-controller="MuscleGroups" asp-action="Excercises" style="color:black">View All Exercises</a>

            </td>
        </tr>*@


    </tbody>

</table>